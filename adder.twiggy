 Shallow Bytes │ Shallow % │ Item
───────────────┼───────────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          3911 ┊    25.72% ┊ custom section '.debug_str'
          3099 ┊    20.38% ┊ "function names" subsection
          1597 ┊    10.50% ┊ custom section '.debug_line'
          1360 ┊     8.94% ┊ custom section '.debug_pubnames'
           994 ┊     6.54% ┊ custom section '.debug_info'
           480 ┊     3.16% ┊ wee_alloc::alloc_first_fit::h3a2a2c5b4ceb0973
           253 ┊     1.66% ┊ custom section '.debug_abbrev'
           236 ┊     1.55% ┊ __rg_alloc_zeroed
           232 ┊     1.53% ┊ custom section '.debug_aranges'
           212 ┊     1.39% ┊ __rg_dealloc
           207 ┊     1.36% ┊ wee_alloc::WeeAlloc::dealloc_impl::{{closure}}::h2158518bd685554a
           184 ┊     1.21% ┊ custom section '.debug_ranges'
           169 ┊     1.11% ┊ data[0]
           168 ┊     1.10% ┊ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::hd28b199366de9573
           155 ┊     1.02% ┊ <elrond_wasm_node::big_int::ArwenBigInt as elrond_codec::top_ser::TopEncode>::top_encode::ha5b12b7ae254c41f
           134 ┊     0.88% ┊ wee_alloc::alloc_with_refill::h910b6ded376cfe7e
           132 ┊     0.87% ┊ wee_alloc::neighbors::Neighbors<T>::remove::h047ec0cb998ff94e
           117 ┊     0.77% ┊ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::h1313183b8eff36f4
           102 ┊     0.67% ┊ add
            81 ┊     0.53% ┊ getSum
            75 ┊     0.49% ┊ custom section 'producers'
            73 ┊     0.48% ┊ <adder::AdderImpl<T,BigInt,BigUint> as adder::Adder<T,BigInt,BigUint>>::get_mut_sum::hdaea397035f1ed75
            72 ┊     0.47% ┊ core::ptr::drop_in_place::h6faca9f44f2e282e
            54 ┊     0.36% ┊ <elrond_wasm_node::ext::ArwenApiImpl as elrond_wasm::ContractIOApi<elrond_wasm_node::big_int::ArwenBigInt,elrond_wasm_node::big_uint::ArwenBigUint>>::check_not_payable::hbbba1a157014f4a3
            54 ┊     0.36% ┊ custom section '.debug_pubtypes'
            46 ┊     0.30% ┊ core::ptr::drop_in_place::he071347d0ff363be
            46 ┊     0.30% ┊ memset
            38 ┊     0.25% ┊ init
            32 ┊     0.21% ┊ import env::bigIntStorageLoadUnsigned
            32 ┊     0.21% ┊ import env::bigIntGetUnsignedArgument
            29 ┊     0.19% ┊ import env::bigIntSignedByteLength
            27 ┊     0.18% ┊ import env::bigIntGetSignedBytes
            26 ┊     0.17% ┊ elrond_wasm::ContractIOApi::check_num_arguments::h999e1730ac55137c
            26 ┊     0.17% ┊ elrond_wasm::io::macro_helpers::load_single_arg::h11b2404628f7b12b
            25 ┊     0.16% ┊ import env::bigIntFinishSigned
            25 ┊     0.16% ┊ import env::bigIntGetCallValue
            22 ┊     0.14% ┊ import env::getNumArguments
            19 ┊     0.12% ┊ import env::storageStore
            19 ┊     0.12% ┊ elrond_wasm_node::ext_error::signal_error::hc4f43392f6fa97cd
            19 ┊     0.12% ┊ rust_oom
            19 ┊     0.12% ┊ rust_begin_unwind
            19 ┊     0.12% ┊ elrond_wasm_node::ext_error::signal_error::hc4f43392f6fa97cd.95
            19 ┊     0.12% ┊ custom section '.debug_pubnames' headers
            18 ┊     0.12% ┊ import env::signalError
            18 ┊     0.12% ┊ custom section '.debug_pubtypes' headers
            18 ┊     0.12% ┊ custom section '.debug_aranges' headers
            17 ┊     0.11% ┊ custom section '.debug_ranges' headers
            17 ┊     0.11% ┊ custom section '.debug_abbrev' headers
            16 ┊     0.11% ┊ import env::bigIntNew
            16 ┊     0.11% ┊ import env::bigIntAdd
            16 ┊     0.11% ┊ import env::bigIntCmp
            16 ┊     0.11% ┊ __rust_dealloc
            15 ┊     0.10% ┊ elrond_wasm_node::ext_error::signal_error::hc4f43392f6fa97cd.107
            15 ┊     0.10% ┊ custom section '.debug_info' headers
            15 ┊     0.10% ┊ custom section '.debug_line' headers
            14 ┊     0.09% ┊ export "__heap_base"
            14 ┊     0.09% ┊ custom section '.debug_str' headers
            13 ┊     0.09% ┊ export "__data_end"
            13 ┊     0.09% ┊ elem[0]
            12 ┊     0.08% ┊ __rust_alloc_zeroed
            12 ┊     0.08% ┊ custom section 'producers' headers
            11 ┊     0.07% ┊ export "callBack"
            11 ┊     0.07% ┊ <elrond_wasm_node::ext::ArwenApiImpl as elrond_wasm::ContractIOApi<elrond_wasm_node::big_int::ArwenBigInt,elrond_wasm_node::big_uint::ArwenBigUint>>::signal_error::h279745b2c1c25e45
            11 ┊     0.07% ┊ alloc::raw_vec::capacity_overflow::ha369776b076180ee
            11 ┊     0.07% ┊ alloc::alloc::handle_alloc_error::he62175e02bb3fcee
            11 ┊     0.07% ┊ core::panicking::panic::h94c4b8c5a269b671
            11 ┊     0.07% ┊ core::panicking::panic_fmt::h62f7e605cdf65d83
            11 ┊     0.07% ┊ <elrond_wasm_node::ext::ArwenApiImpl as elrond_wasm::ContractIOApi<elrond_wasm_node::big_int::ArwenBigInt,elrond_wasm_node::big_uint::ArwenBigUint>>::signal_error::h279745b2c1c25e45.98
             9 ┊     0.06% ┊ type[11]: (i32, i32, i32, i32, i32) -> i32
             9 ┊     0.06% ┊ export "memory"
             9 ┊     0.06% ┊ export "getSum"
             8 ┊     0.05% ┊ type[5]: (i32, i32, i32, i32) -> i32
             8 ┊     0.05% ┊ global[0]
             8 ┊     0.05% ┊ global[1]
             8 ┊     0.05% ┊ global[2]
             8 ┊     0.05% ┊ custom section 'name' headers
             8 ┊     0.05% ┊ wasm magic bytes
             7 ┊     0.05% ┊ type[1]: (i32, i32, i32, i32) -> nil
             7 ┊     0.05% ┊ type[7]: (i32, i32, i32) -> i32
             7 ┊     0.05% ┊ export "init"
             7 ┊     0.05% ┊ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::hfaebb981b8da767b
             7 ┊     0.05% ┊ code section headers
             6 ┊     0.04% ┊ type[2]: (i32, i32) -> i32
             6 ┊     0.04% ┊ type[9]: (i32, i32, i32) -> nil
             6 ┊     0.04% ┊ export "add"
             6 ┊     0.04% ┊ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::h1fbc19b360344a6c
             6 ┊     0.04% ┊ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h73a7ef74832d6d90
             6 ┊     0.04% ┊ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::h4270d0b364e45901
             5 ┊     0.03% ┊ type[0]: (i32) -> i32
             5 ┊     0.03% ┊ type[4]: (i32, i32) -> nil
             5 ┊     0.03% ┊ type[6]: (i64) -> i32
             4 ┊     0.03% ┊ type[3]: () -> i32
             4 ┊     0.03% ┊ type[8]: (i32) -> nil
             4 ┊     0.03% ┊ import section headers
             4 ┊     0.03% ┊ table[0]
             4 ┊     0.03% ┊ callBack
             4 ┊     0.03% ┊ core::ptr::drop_in_place::hb4f973bc9930f3cd
             4 ┊     0.03% ┊ core::ptr::drop_in_place::h679ddd57c08bf0f0
             4 ┊     0.03% ┊ data section headers
             3 ┊     0.02% ┊ type[10]: () -> nil
             3 ┊     0.02% ┊ type section headers
             3 ┊     0.02% ┊ table section headers
             3 ┊     0.02% ┊ memory section headers
             3 ┊     0.02% ┊ global section headers
             3 ┊     0.02% ┊ export section headers
             3 ┊     0.02% ┊ element section headers
             2 ┊     0.01% ┊ memory[0]
         15207 ┊   100.00% ┊ Σ [107 Total Rows]
