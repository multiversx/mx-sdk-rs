{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19","program":"/home/andreim/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","proc_macro2","--edition=2018","/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"proc-macro\"","-C","metadata=194003952cd3c42e","-C","extra-filename=-194003952cd3c42e","--out-dir","/home/andreim/elrond/newsc/sc-delegation-rs/features-module/target/rls/debug/deps","-L","dependency=/home/andreim/elrond/newsc/sc-delegation-rs/features-module/target/rls/debug/deps","--extern","unicode_xid=/home/andreim/elrond/newsc/sc-delegation-rs/features-module/target/rls/debug/deps/libunicode_xid-460f9c27fbb1b178.rmeta","--cap-lints","allow","--cfg","hygiene","--cfg","use_proc_macro","--cfg","wrap_proc_macro","--cfg","proc_macro_span","--error-format=json","--sysroot","/home/andreim/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/andreim/elrond/newsc/sc-delegation-rs/features-module/target/rls/debug/deps/libproc_macro2-194003952cd3c42e.rmeta"},"prelude":{"crate_id":{"name":"proc_macro2","disambiguator":[1666445146715393549,17578269550399176974]},"crate_root":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src","external_crates":[{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","num":15,"id":{"name":"proc_macro","disambiguator":[519318202406880417,10508166501909004081]}},{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/parse.rs","num":16,"id":{"name":"unicode_xid","disambiguator":[4201002685584623309,15413428563587409213]}}],"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":0,"byte_end":39756,"line_start":1,"line_end":1226,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":720},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38797,"byte_end":38808,"line_start":1189,"line_end":1189,"column_start":20,"column_end":31},"alias_span":null,"name":"TokenStream","value":"","parent":{"krate":0,"index":509}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":0,"byte_end":39756,"line_start":1,"line_end":1226,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":835},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":839},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":89},{"krate":0,"index":103},{"krate":0,"index":229},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":725},{"krate":0,"index":730},{"krate":0,"index":728},{"krate":0,"index":415},{"krate":0,"index":425},{"krate":0,"index":731},{"krate":0,"index":744},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":769},{"krate":0,"index":767},{"krate":0,"index":765},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":442},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":770},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":791},{"krate":0,"index":789},{"krate":0,"index":787},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":456},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":466},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":491},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509}],"decl_id":null,"docs":" A wrapper around the procedural macro API of the compiler's [`proc_macro`]\n crate. This library serves two purposes:","sig":null,"attributes":[{"value":"! A wrapper around the procedural macro API of the compiler's [`proc_macro`]","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"! crate. This library serves two purposes:","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":79,"byte_end":123,"line_start":2,"line_end":2,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":124,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! [`proc_macro`]: https://doc.rust-lang.org/proc_macro/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":128,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":186,"byte_end":189,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! - **Bring proc-macro-like functionality to other contexts like build.rs and","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":190,"byte_end":269,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"!   main.rs.** Types from `proc_macro` are entirely specific to procedural","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":270,"byte_end":346,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"!   macros and cannot ever exist in code outside of a procedural macro.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":347,"byte_end":420,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"!   Meanwhile `proc_macro2` types may exist anywhere including non-macro code.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":421,"byte_end":501,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"!   By developing foundational libraries like [syn] and [quote] against","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":502,"byte_end":575,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"!   `proc_macro2` rather than `proc_macro`, the procedural macro ecosystem","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":576,"byte_end":652,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"!   becomes easily applicable to many other use cases and we avoid","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":653,"byte_end":721,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"!   reimplementing non-macro equivalents of those libraries.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":722,"byte_end":784,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":785,"byte_end":788,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! - **Make procedural macros unit testable.** As a consequence of being","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":789,"byte_end":862,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"!   specific to procedural macros, nothing that uses `proc_macro` can be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":863,"byte_end":937,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"!   executed from a unit test. In order for helper libraries or components of","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":938,"byte_end":1017,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"!   a macro to be testable in isolation, they must be implemented using","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1018,"byte_end":1091,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"!   `proc_macro2`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1092,"byte_end":1112,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1113,"byte_end":1116,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! [syn]: https://github.com/dtolnay/syn","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1117,"byte_end":1158,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"! [quote]: https://github.com/dtolnay/quote","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1159,"byte_end":1204,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1205,"byte_end":1208,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1209,"byte_end":1220,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1221,"byte_end":1224,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! The skeleton of a typical procedural macro typically looks like this:","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1225,"byte_end":1298,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1299,"byte_end":1302,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1303,"byte_end":1310,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"! extern crate proc_macro;","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1311,"byte_end":1339,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1340,"byte_end":1343,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # const IGNORE: &str = stringify! {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1344,"byte_end":1383,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"! #[proc_macro_derive(MyDerive)]","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1384,"byte_end":1418,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"! # };","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1419,"byte_end":1427,"line_start":33,"line_end":33,"column_start":1,"column_end":9}},{"value":"! # #[cfg(wrap_proc_macro)]","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1428,"byte_end":1457,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"! pub fn my_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1458,"byte_end":1539,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"!     let input = proc_macro2::TokenStream::from(input);","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1540,"byte_end":1598,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1599,"byte_end":1602,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"!     let output: proc_macro2::TokenStream = {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1603,"byte_end":1651,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"!         /* transform input */","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1652,"byte_end":1685,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"!         # input","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1686,"byte_end":1705,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"!     };","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1706,"byte_end":1716,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1717,"byte_end":1720,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"!     proc_macro::TokenStream::from(output)","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1721,"byte_end":1766,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1767,"byte_end":1772,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1773,"byte_end":1780,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1781,"byte_end":1784,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! If parsing with [Syn], you'll use [`parse_macro_input!`] instead to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1785,"byte_end":1856,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"! propagate parse errors correctly back to the compiler when parsing fails.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1857,"byte_end":1934,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1935,"byte_end":1938,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! [`parse_macro_input!`]: https://docs.rs/syn/1.0/syn/macro.parse_macro_input.html","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":1939,"byte_end":2023,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2024,"byte_end":2027,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! # Unstable features","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2028,"byte_end":2051,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2052,"byte_end":2055,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! The default feature set of proc-macro2 tracks the most recent stable","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2056,"byte_end":2128,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"! compiler API. Functionality in `proc_macro` that is not yet stable is not","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2129,"byte_end":2206,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"! exposed by proc-macro2 by default.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2207,"byte_end":2245,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2246,"byte_end":2249,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! To opt into the additional APIs available in the most recent nightly","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2250,"byte_end":2322,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"! compiler, the `procmacro2_semver_exempt` config flag must be passed to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2323,"byte_end":2397,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"! rustc. We will polyfill those nightly-only APIs back to Rust 1.31.0. As","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2398,"byte_end":2473,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! these are unstable APIs that track the nightly compiler, minor versions of","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2474,"byte_end":2552,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"! proc-macro2 may make breaking changes to them at any time.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2553,"byte_end":2615,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2616,"byte_end":2619,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! ```sh","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2620,"byte_end":2629,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"! RUSTFLAGS='--cfg procmacro2_semver_exempt' cargo build","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2630,"byte_end":2688,"line_start":65,"line_end":65,"column_start":1,"column_end":59}},{"value":"! ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2689,"byte_end":2696,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2697,"byte_end":2700,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! Note that this must not only be done for your crate, but for any crate that","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2701,"byte_end":2780,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"! depends on your crate. This infectious nature is intentional, as it serves","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2781,"byte_end":2859,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"! as a reminder that you are outside of the normal semver guarantees.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2860,"byte_end":2931,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2932,"byte_end":2935,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! Semver exempt methods are marked as such in the proc-macro2 documentation.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":2936,"byte_end":3014,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":3015,"byte_end":3018,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! # Thread-Safety","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":3019,"byte_end":3038,"line_start":74,"line_end":74,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":3039,"byte_end":3042,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! Most types in this crate are `!Sync` because the underlying compiler","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":3043,"byte_end":3115,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"! types make use of thread-local memory, meaning they cannot be accessed from","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":3116,"byte_end":3195,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"! a different thread.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":3196,"byte_end":3219,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"feature(proc_macro_span)","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":3401,"byte_end":3425,"line_start":82,"line_end":82,"column_start":51,"column_end":75}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":3509,"byte_end":3549,"line_start":84,"line_end":84,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":103},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fallback","qualname":"::fallback","value":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":901},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":915},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":124},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":555},{"krate":0,"index":564},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":566},{"krate":0,"index":579},{"krate":0,"index":578},{"krate":0,"index":576},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":581},{"krate":0,"index":589},{"krate":0,"index":588},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":169},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":591},{"krate":0,"index":595},{"krate":0,"index":180},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":597},{"krate":0,"index":601},{"krate":0,"index":192},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":214},{"krate":0,"index":225},{"krate":0,"index":227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":64961,"byte_end":64966,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"force","qualname":"::fallback::force","value":"pub fn force()","parent":null,"children":[],"decl_id":null,"docs":" Force use of proc-macro2's fallback implementation of the API for now, even\n if the compiler's implementation is available.\n","sig":null,"attributes":[{"value":"/ Force use of proc-macro2's fallback implementation of the API for now, even","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":64823,"byte_end":64902,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ if the compiler's implementation is available.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":64903,"byte_end":64953,"line_start":19,"line_end":19,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":65142,"byte_end":65149,"line_start":27,"line_end":27,"column_start":8,"column_end":15},"name":"unforce","qualname":"::fallback::unforce","value":"pub fn unforce()","parent":null,"children":[],"decl_id":null,"docs":" Resume using the compiler's implementation of the proc macro API if it is\n available.\n","sig":null,"attributes":[{"value":"/ Resume using the compiler's implementation of the proc macro API if it is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":65042,"byte_end":65119,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":65120,"byte_end":65134,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":720},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4561,"byte_end":4572,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"TokenStream","qualname":"::TokenStream","value":"TokenStream {  }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":" An abstract stream of tokens, or more concretely a sequence of token trees.","sig":null,"attributes":[{"value":"/ An abstract stream of tokens, or more concretely a sequence of token trees.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4192,"byte_end":4271,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4272,"byte_end":4275,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This type provides interfaces for iterating over token trees and for","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4276,"byte_end":4348,"line_start":118,"line_end":118,"column_start":1,"column_end":73}},{"value":"/ collecting token trees into one stream.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4349,"byte_end":4392,"line_start":119,"line_end":119,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4393,"byte_end":4396,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Token stream is both the input and output of `#[proc_macro]`,","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4397,"byte_end":4462,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ `#[proc_macro_attribute]` and `#[proc_macro_derive]` definitions.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4463,"byte_end":4532,"line_start":122,"line_end":122,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":375},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4709,"byte_end":4717,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"LexError","qualname":"::LexError","value":"LexError {  }","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" Error returned from `TokenStream::from_str`.\n","sig":null,"attributes":[{"value":"/ Error returned from `TokenStream::from_str`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4649,"byte_end":4697,"line_start":129,"line_end":129,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":5221,"byte_end":5224,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenStream>::new","value":"pub fn new() -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty `TokenStream` containing no token trees.\n","sig":null,"attributes":[{"value":"/ Returns an empty `TokenStream` containing no token trees.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":5148,"byte_end":5209,"line_start":150,"line_end":150,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":5360,"byte_end":5368,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TokenStream>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `TokenStream` is empty.\n","sig":null,"attributes":[{"value":"/ Checks if this `TokenStream` is empty.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":5306,"byte_end":5348,"line_start":155,"line_end":155,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":10675,"byte_end":10679,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"Span","qualname":"::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727}],"decl_id":null,"docs":" A region of source code, along with macro expansion information.\n","sig":null,"attributes":[{"value":"/ A region of source code, along with macro expansion information.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":10572,"byte_end":10640,"line_start":337,"line_end":337,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11373,"byte_end":11382,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"call_site","qualname":"<Span>::call_site","value":"pub fn call_site() -> Span","parent":null,"children":[],"decl_id":null,"docs":" The span of the invocation of the current procedural macro.","sig":null,"attributes":[{"value":"/ The span of the invocation of the current procedural macro.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11057,"byte_end":11120,"line_start":359,"line_end":359,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11125,"byte_end":11128,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Identifiers created with this span will be resolved as if they were","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11133,"byte_end":11204,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ written directly at the macro call location (call-site hygiene) and","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11209,"byte_end":11280,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/ other code at the macro call site will be able to refer to them as well.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11285,"byte_end":11361,"line_start":363,"line_end":363,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11764,"byte_end":11774,"line_start":374,"line_end":374,"column_start":12,"column_end":22},"name":"mixed_site","qualname":"<Span>::mixed_site","value":"pub fn mixed_site() -> Span","parent":null,"children":[],"decl_id":null,"docs":" The span located at the invocation of the procedural macro, but with\n local variables, labels, and `$crate` resolved at the definition site\n of the macro. This is the same hygiene behavior as `macro_rules`.","sig":null,"attributes":[{"value":"/ The span located at the invocation of the procedural macro, but with","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11449,"byte_end":11521,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/ local variables, labels, and `$crate` resolved at the definition site","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11526,"byte_end":11599,"line_start":369,"line_end":369,"column_start":5,"column_end":78}},{"value":"/ of the macro. This is the same hygiene behavior as `macro_rules`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11604,"byte_end":11673,"line_start":370,"line_end":370,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11678,"byte_end":11681,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function requires Rust 1.45 or later.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11686,"byte_end":11732,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"cfg(hygiene)","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":11737,"byte_end":11752,"line_start":373,"line_end":373,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12238,"byte_end":12249,"line_start":388,"line_end":388,"column_start":12,"column_end":23},"name":"resolved_at","qualname":"<Span>::resolved_at","value":"pub fn resolved_at(&Self, Span) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Creates a new span with the same line/column information as `self` but\n that resolves symbols as though it were at `other`.\n","sig":null,"attributes":[{"value":"/ Creates a new span with the same line/column information as `self` but","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12092,"byte_end":12166,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ that resolves symbols as though it were at `other`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12171,"byte_end":12226,"line_start":387,"line_end":387,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12487,"byte_end":12497,"line_start":394,"line_end":394,"column_start":12,"column_end":22},"name":"located_at","qualname":"<Span>::located_at","value":"pub fn located_at(&Self, Span) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Creates a new span with the same name resolution behavior as `self` but\n with the line/column information of `other`.\n","sig":null,"attributes":[{"value":"/ Creates a new span with the same name resolution behavior as `self` but","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12347,"byte_end":12422,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ with the line/column information of `other`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12427,"byte_end":12475,"line_start":393,"line_end":393,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":13078,"byte_end":13084,"line_start":409,"line_end":409,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Span>::unwrap","value":"pub fn unwrap(Self) -> proc_macro::Span","parent":null,"children":[],"decl_id":null,"docs":" Convert `proc_macro2::Span` to `proc_macro::Span`.","sig":null,"attributes":[{"value":"/ Convert `proc_macro2::Span` to `proc_macro::Span`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12594,"byte_end":12648,"line_start":398,"line_end":398,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12653,"byte_end":12656,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method is available when building with a nightly compiler, or when","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12661,"byte_end":12736,"line_start":400,"line_end":400,"column_start":5,"column_end":80}},{"value":"/ building with rustc 1.29+ *without* semver exempt features.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12741,"byte_end":12804,"line_start":401,"line_end":401,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12809,"byte_end":12812,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12817,"byte_end":12829,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12834,"byte_end":12837,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Panics if called from outside of a procedural macro. Unlike","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12842,"byte_end":12905,"line_start":405,"line_end":405,"column_start":5,"column_end":68}},{"value":"/ `proc_macro2::Span`, the `proc_macro::Span` type can only exist within","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12910,"byte_end":12984,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ the context of a procedural macro invocation.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":12989,"byte_end":13038,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"cfg(wrap_proc_macro)","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":13043,"byte_end":13066,"line_start":408,"line_end":408,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":13255,"byte_end":13263,"line_start":416,"line_end":416,"column_start":12,"column_end":20},"name":"unstable","qualname":"<Span>::unstable","value":"pub fn unstable(Self) -> proc_macro::Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(wrap_proc_macro)","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":13201,"byte_end":13224,"line_start":414,"line_end":414,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14731,"byte_end":14735,"line_start":455,"line_end":455,"column_start":12,"column_end":16},"name":"join","qualname":"<Span>::join","value":"pub fn join(&Self, Span) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Create a new span encompassing `self` and `other`.","sig":null,"attributes":[{"value":"/ Create a new span encompassing `self` and `other`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14257,"byte_end":14311,"line_start":446,"line_end":446,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14316,"byte_end":14319,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` and `other` are from different files.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14324,"byte_end":14390,"line_start":448,"line_end":448,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14395,"byte_end":14398,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Warning: the underlying [`proc_macro::Span::join`] method is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14403,"byte_end":14467,"line_start":450,"line_end":450,"column_start":5,"column_end":69}},{"value":"/ nightly-only. When called from within a procedural macro not using a","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14472,"byte_end":14544,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ nightly compiler, this method will always return `None`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14549,"byte_end":14609,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14614,"byte_end":14617,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ [`proc_macro::Span::join`]: https://doc.rust-lang.org/proc_macro/struct.Span.html#method.join","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":14622,"byte_end":14719,"line_start":454,"line_end":454,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":732},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15444,"byte_end":15449,"line_start":479,"line_end":479,"column_start":5,"column_end":10},"name":"Group","qualname":"::TokenTree::Group","value":"TokenTree::Group(Group)","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" A token stream surrounded by bracket delimiters.\n","sig":null,"attributes":[{"value":"/ A token stream surrounded by bracket delimiters.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15387,"byte_end":15439,"line_start":478,"line_end":478,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":735},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15485,"byte_end":15490,"line_start":481,"line_end":481,"column_start":5,"column_end":10},"name":"Ident","qualname":"::TokenTree::Ident","value":"TokenTree::Ident(Ident)","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" An identifier.\n","sig":null,"attributes":[{"value":"/ An identifier.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15462,"byte_end":15480,"line_start":480,"line_end":480,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":738},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15565,"byte_end":15570,"line_start":483,"line_end":483,"column_start":5,"column_end":10},"name":"Punct","qualname":"::TokenTree::Punct","value":"TokenTree::Punct(Punct)","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" A single punctuation character (`+`, `,`, `$`, etc.).\n","sig":null,"attributes":[{"value":"/ A single punctuation character (`+`, `,`, `$`, etc.).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15503,"byte_end":15560,"line_start":482,"line_end":482,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":741},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15661,"byte_end":15668,"line_start":485,"line_end":485,"column_start":5,"column_end":12},"name":"Literal","qualname":"::TokenTree::Literal","value":"TokenTree::Literal(Literal)","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.\n","sig":null,"attributes":[{"value":"/ A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15583,"byte_end":15656,"line_start":484,"line_end":484,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":731},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15371,"byte_end":15380,"line_start":477,"line_end":477,"column_start":10,"column_end":19},"name":"TokenTree","qualname":"::TokenTree","value":"pub enum TokenTree {\n\n    /// A token stream surrounded by bracket delimiters.\n    Group(Group),\n\n    /// An identifier.\n    Ident(Ident),\n\n    /// A single punctuation character (`+`, `,`, `$`, etc.).\n    Punct(Punct),\n\n    /// A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.\n    Literal(Literal),\n}","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741}],"decl_id":null,"docs":" A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).\n","sig":null,"attributes":[{"value":"/ A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15265,"byte_end":15344,"line_start":475,"line_end":475,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15835,"byte_end":15839,"line_start":491,"line_end":491,"column_start":12,"column_end":16},"name":"span","qualname":"<TokenTree>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of this tree, delegating to the `span` method of\n the contained token or a delimited stream.\n","sig":null,"attributes":[{"value":"/ Returns the span of this tree, delegating to the `span` method of","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15703,"byte_end":15772,"line_start":489,"line_end":489,"column_start":5,"column_end":74}},{"value":"/ the contained token or a delimited stream.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15777,"byte_end":15823,"line_start":490,"line_end":490,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16353,"byte_end":16361,"line_start":505,"line_end":505,"column_start":12,"column_end":20},"name":"set_span","qualname":"<TokenTree>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configures the span for *only this token*.","sig":null,"attributes":[{"value":"/ Configures the span for *only this token*.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16081,"byte_end":16127,"line_start":500,"line_end":500,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16132,"byte_end":16135,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Note that if this token is a `Group` then this method will not configure","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16140,"byte_end":16216,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ the span of each of the internal tokens, this will simply delegate to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16221,"byte_end":16294,"line_start":503,"line_end":503,"column_start":5,"column_end":78}},{"value":"/ the `set_span` method of each variant.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16299,"byte_end":16341,"line_start":504,"line_end":504,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":746},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18591,"byte_end":18596,"line_start":578,"line_end":578,"column_start":12,"column_end":17},"name":"Group","qualname":"::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":747}],"decl_id":null,"docs":" A delimited token stream.","sig":null,"attributes":[{"value":"/ A delimited token stream.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18438,"byte_end":18467,"line_start":573,"line_end":573,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18468,"byte_end":18471,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ A `Group` internally contains a `TokenStream` which is surrounded by","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18472,"byte_end":18544,"line_start":575,"line_end":575,"column_start":1,"column_end":73}},{"value":"/ `Delimiter`s.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18545,"byte_end":18562,"line_start":576,"line_end":576,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":751},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18771,"byte_end":18782,"line_start":586,"line_end":586,"column_start":5,"column_end":16},"name":"Parenthesis","qualname":"::Delimiter::Parenthesis","value":"Delimiter::Parenthesis","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" `( ... )`\n","sig":null,"attributes":[{"value":"/ `( ... )`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18753,"byte_end":18766,"line_start":585,"line_end":585,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":753},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18806,"byte_end":18811,"line_start":588,"line_end":588,"column_start":5,"column_end":10},"name":"Brace","qualname":"::Delimiter::Brace","value":"Delimiter::Brace","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" `{ ... }`\n","sig":null,"attributes":[{"value":"/ `{ ... }`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18788,"byte_end":18801,"line_start":587,"line_end":587,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":755},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18835,"byte_end":18842,"line_start":590,"line_end":590,"column_start":5,"column_end":12},"name":"Bracket","qualname":"::Delimiter::Bracket","value":"Delimiter::Bracket","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" `[ ... ]`\n","sig":null,"attributes":[{"value":"/ `[ ... ]`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18817,"byte_end":18830,"line_start":589,"line_end":589,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19202,"byte_end":19206,"line_start":598,"line_end":598,"column_start":5,"column_end":9},"name":"None","qualname":"::Delimiter::None","value":"Delimiter::None","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" `Ø ... Ø`","sig":null,"attributes":[{"value":"/ `Ø ... Ø`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18848,"byte_end":18863,"line_start":591,"line_end":591,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18868,"byte_end":18871,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ An implicit delimiter, that may, for example, appear around tokens","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18876,"byte_end":18946,"line_start":593,"line_end":593,"column_start":5,"column_end":75}},{"value":"/ coming from a \"macro variable\" `$var`. It is important to preserve","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18951,"byte_end":19021,"line_start":594,"line_end":594,"column_start":5,"column_end":75}},{"value":"/ operator priorities in cases like `$var * 3` where `$var` is `1 + 2`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19026,"byte_end":19099,"line_start":595,"line_end":595,"column_start":5,"column_end":78}},{"value":"/ Implicit delimiters may not survive roundtrip of a token stream through","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19104,"byte_end":19179,"line_start":596,"line_end":596,"column_start":5,"column_end":80}},{"value":"/ a string.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19184,"byte_end":19197,"line_start":597,"line_end":597,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":750},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18737,"byte_end":18746,"line_start":584,"line_end":584,"column_start":10,"column_end":19},"name":"Delimiter","qualname":"::Delimiter","value":"pub enum Delimiter {\n\n    /// `( ... )`\n    Parenthesis,\n\n    /// `{ ... }`\n    Brace,\n\n    /// `[ ... ]`\n    Bracket,\n\n    /// `Ø ... Ø`\n    ///\n    /// An implicit delimiter, that may, for example, appear around tokens\n    /// coming from a \"macro variable\" `$var`. It is important to preserve\n    /// operator priorities in cases like `$var * 3` where `$var` is `1 + 2`.\n    /// Implicit delimiters may not survive roundtrip of a token stream through\n    /// a string.\n    None,\n}","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757}],"decl_id":null,"docs":" Describes how a sequence of token trees is delimited.\n","sig":null,"attributes":[{"value":"/ Describes how a sequence of token trees is delimited.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":18625,"byte_end":18682,"line_start":582,"line_end":582,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19665,"byte_end":19668,"line_start":617,"line_end":617,"column_start":12,"column_end":15},"name":"new","qualname":"<Group>::new","value":"pub fn new(Delimiter, TokenStream) -> Group","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Group` with the given delimiter and token stream.","sig":null,"attributes":[{"value":"/ Creates a new `Group` with the given delimiter and token stream.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19419,"byte_end":19487,"line_start":612,"line_end":612,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19492,"byte_end":19495,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ This constructor will set the span for this group to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19500,"byte_end":19556,"line_start":614,"line_end":614,"column_start":5,"column_end":61}},{"value":"/ `Span::call_site()`. To change the span you can use the `set_span`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19561,"byte_end":19631,"line_start":615,"line_end":615,"column_start":5,"column_end":75}},{"value":"/ method below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19636,"byte_end":19653,"line_start":616,"line_end":616,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19874,"byte_end":19883,"line_start":624,"line_end":624,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<Group>::delimiter","value":"pub fn delimiter(&Self) -> Delimiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the delimiter of this `Group`\n","sig":null,"attributes":[{"value":"/ Returns the delimiter of this `Group`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19821,"byte_end":19862,"line_start":623,"line_end":623,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20142,"byte_end":20148,"line_start":632,"line_end":632,"column_start":12,"column_end":18},"name":"stream","qualname":"<Group>::stream","value":"pub fn stream(&Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Returns the `TokenStream` of tokens that are delimited in this `Group`.","sig":null,"attributes":[{"value":"/ Returns the `TokenStream` of tokens that are delimited in this `Group`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19948,"byte_end":20023,"line_start":628,"line_end":628,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20028,"byte_end":20031,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ Note that the returned token stream does not include the delimiter","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20036,"byte_end":20106,"line_start":630,"line_end":630,"column_start":5,"column_end":75}},{"value":"/ returned above.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20111,"byte_end":20130,"line_start":631,"line_end":631,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20441,"byte_end":20445,"line_start":643,"line_end":643,"column_start":12,"column_end":16},"name":"span","qualname":"<Group>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span for the delimiters of this token stream, spanning the\n entire `Group`.","sig":null,"attributes":[{"value":"/ Returns the span for the delimiters of this token stream, spanning the","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20231,"byte_end":20305,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/ entire `Group`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20310,"byte_end":20329,"line_start":637,"line_end":637,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20334,"byte_end":20337,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20342,"byte_end":20353,"line_start":639,"line_end":639,"column_start":5,"column_end":16}},{"value":"/ pub fn span(&self) -> Span {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20358,"byte_end":20390,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/            ^^^^^^^","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20395,"byte_end":20417,"line_start":641,"line_end":641,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20422,"byte_end":20429,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20697,"byte_end":20706,"line_start":653,"line_end":653,"column_start":12,"column_end":21},"name":"span_open","qualname":"<Group>::span_open","value":"pub fn span_open(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span pointing to the opening delimiter of this group.","sig":null,"attributes":[{"value":"/ Returns the span pointing to the opening delimiter of this group.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20512,"byte_end":20581,"line_start":647,"line_end":647,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20586,"byte_end":20589,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20594,"byte_end":20605,"line_start":649,"line_end":649,"column_start":5,"column_end":16}},{"value":"/ pub fn span_open(&self) -> Span {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20610,"byte_end":20647,"line_start":650,"line_end":650,"column_start":5,"column_end":42}},{"value":"/                 ^","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20652,"byte_end":20673,"line_start":651,"line_end":651,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20678,"byte_end":20685,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20971,"byte_end":20981,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"span_close","qualname":"<Group>::span_close","value":"pub fn span_close(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span pointing to the closing delimiter of this group.","sig":null,"attributes":[{"value":"/ Returns the span pointing to the closing delimiter of this group.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20778,"byte_end":20847,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20852,"byte_end":20855,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20860,"byte_end":20871,"line_start":659,"line_end":659,"column_start":5,"column_end":16}},{"value":"/ pub fn span_close(&self) -> Span {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20876,"byte_end":20914,"line_start":660,"line_end":660,"column_start":5,"column_end":43}},{"value":"/                        ^","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20919,"byte_end":20947,"line_start":661,"line_end":661,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":20952,"byte_end":20959,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21367,"byte_end":21375,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Group>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configures the span for this `Group`'s delimiters, but not its internal\n tokens.","sig":null,"attributes":[{"value":"/ Configures the span for this `Group`'s delimiters, but not its internal","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21054,"byte_end":21129,"line_start":667,"line_end":667,"column_start":5,"column_end":80}},{"value":"/ tokens.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21134,"byte_end":21145,"line_start":668,"line_end":668,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21150,"byte_end":21153,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This method will **not** set the span of all the internal tokens spanned","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21158,"byte_end":21234,"line_start":670,"line_end":670,"column_start":5,"column_end":81}},{"value":"/ by this group, but rather it will only set the span of the delimiter","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21239,"byte_end":21311,"line_start":671,"line_end":671,"column_start":5,"column_end":77}},{"value":"/ tokens at the level of the `Group`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21316,"byte_end":21355,"line_start":672,"line_end":672,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22168,"byte_end":22173,"line_start":698,"line_end":698,"column_start":12,"column_end":17},"name":"Punct","qualname":"::Punct","value":"Punct {  }","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773}],"decl_id":null,"docs":" An `Punct` is an single punctuation character like `+`, `-` or `#`.","sig":null,"attributes":[{"value":"/ An `Punct` is an single punctuation character like `+`, `-` or `#`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21933,"byte_end":22004,"line_start":693,"line_end":693,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22005,"byte_end":22008,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ Multicharacter operators like `+=` are represented as two instances of","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22009,"byte_end":22083,"line_start":695,"line_end":695,"column_start":1,"column_end":75}},{"value":"/ `Punct` with different forms of `Spacing` returned.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22084,"byte_end":22139,"line_start":696,"line_end":696,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":777},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22470,"byte_end":22475,"line_start":709,"line_end":709,"column_start":5,"column_end":10},"name":"Alone","qualname":"::Spacing::Alone","value":"Spacing::Alone","parent":{"krate":0,"index":776},"children":[],"decl_id":null,"docs":" E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.\n","sig":null,"attributes":[{"value":"/ E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22413,"byte_end":22465,"line_start":708,"line_end":708,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":779},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22653,"byte_end":22658,"line_start":714,"line_end":714,"column_start":5,"column_end":10},"name":"Joint","qualname":"::Spacing::Joint","value":"Spacing::Joint","parent":{"krate":0,"index":776},"children":[],"decl_id":null,"docs":" E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.","sig":null,"attributes":[{"value":"/ E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22481,"byte_end":22539,"line_start":710,"line_end":710,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22544,"byte_end":22547,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ Additionally, single quote `'` can join with identifiers to form","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22552,"byte_end":22620,"line_start":712,"line_end":712,"column_start":5,"column_end":73}},{"value":"/ lifetimes `'ident`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22625,"byte_end":22648,"line_start":713,"line_end":713,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":776},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22399,"byte_end":22406,"line_start":707,"line_end":707,"column_start":10,"column_end":17},"name":"Spacing","qualname":"::Spacing","value":"pub enum Spacing {\n\n    /// E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.\n    Alone,\n\n    /// E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.\n    ///\n    /// Additionally, single quote `'` can join with identifiers to form\n    /// lifetimes `'ident`.\n    Joint,\n}","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":779}],"decl_id":null,"docs":" Whether an `Punct` is followed immediately by another `Punct` or followed by\n another token or whitespace.\n","sig":null,"attributes":[{"value":"/ Whether an `Punct` is followed immediately by another `Punct` or followed by","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22231,"byte_end":22311,"line_start":704,"line_end":704,"column_start":1,"column_end":81}},{"value":"/ another token or whitespace.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22312,"byte_end":22344,"line_start":705,"line_end":705,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23058,"byte_end":23061,"line_start":725,"line_end":725,"column_start":12,"column_end":15},"name":"new","qualname":"<Punct>::new","value":"pub fn new(char, Spacing) -> Punct","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Punct` from the given character and spacing.","sig":null,"attributes":[{"value":"/ Creates a new `Punct` from the given character and spacing.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22680,"byte_end":22743,"line_start":718,"line_end":718,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22748,"byte_end":22751,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ The `ch` argument must be a valid punctuation character permitted by the","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22756,"byte_end":22832,"line_start":720,"line_end":720,"column_start":5,"column_end":81}},{"value":"/ language, otherwise the function will panic.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22837,"byte_end":22885,"line_start":721,"line_end":721,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22890,"byte_end":22893,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ The returned `Punct` will have the default span of `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22898,"byte_end":22972,"line_start":723,"line_end":723,"column_start":5,"column_end":79}},{"value":"/ which can be further configured with the `set_span` method below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22977,"byte_end":23046,"line_start":724,"line_end":724,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23286,"byte_end":23293,"line_start":734,"line_end":734,"column_start":12,"column_end":19},"name":"as_char","qualname":"<Punct>::as_char","value":"pub fn as_char(&Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of this punctuation character as `char`.\n","sig":null,"attributes":[{"value":"/ Returns the value of this punctuation character as `char`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23212,"byte_end":23274,"line_start":733,"line_end":733,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23697,"byte_end":23704,"line_start":743,"line_end":743,"column_start":12,"column_end":19},"name":"spacing","qualname":"<Punct>::spacing","value":"pub fn spacing(&Self) -> Spacing","parent":null,"children":[],"decl_id":null,"docs":" Returns the spacing of this punctuation character, indicating whether\n it's immediately followed by another `Punct` in the token stream, so\n they can potentially be combined into a multicharacter operator\n (`Joint`), or it's followed by some other token or whitespace (`Alone`)\n so the operator has certainly ended.\n","sig":null,"attributes":[{"value":"/ Returns the spacing of this punctuation character, indicating whether","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23338,"byte_end":23411,"line_start":738,"line_end":738,"column_start":5,"column_end":78}},{"value":"/ it's immediately followed by another `Punct` in the token stream, so","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23416,"byte_end":23488,"line_start":739,"line_end":739,"column_start":5,"column_end":77}},{"value":"/ they can potentially be combined into a multicharacter operator","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23493,"byte_end":23560,"line_start":740,"line_end":740,"column_start":5,"column_end":72}},{"value":"/ (`Joint`), or it's followed by some other token or whitespace (`Alone`)","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23565,"byte_end":23640,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ so the operator has certainly ended.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23645,"byte_end":23685,"line_start":742,"line_end":742,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23821,"byte_end":23825,"line_start":748,"line_end":748,"column_start":12,"column_end":16},"name":"span","qualname":"<Punct>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span for this punctuation character.\n","sig":null,"attributes":[{"value":"/ Returns the span for this punctuation character.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23757,"byte_end":23809,"line_start":747,"line_end":747,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23938,"byte_end":23946,"line_start":753,"line_end":753,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Punct>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configure the span for this punctuation character.\n","sig":null,"attributes":[{"value":"/ Configure the span for this punctuation character.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":23872,"byte_end":23926,"line_start":752,"line_end":752,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":792},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26731,"byte_end":26736,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"Ident","qualname":"::Ident","value":"Ident {  }","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"decl_id":null,"docs":" A word of Rust code, which may be a keyword or legal variable name.","sig":null,"attributes":[{"value":"/ A word of Rust code, which may be a keyword or legal variable name.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24580,"byte_end":24651,"line_start":776,"line_end":776,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24652,"byte_end":24655,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ An identifier consists of at least one Unicode code point, the first of","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24656,"byte_end":24731,"line_start":778,"line_end":778,"column_start":1,"column_end":76}},{"value":"/ which has the XID_Start property and the rest of which have the XID_Continue","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24732,"byte_end":24812,"line_start":779,"line_end":779,"column_start":1,"column_end":81}},{"value":"/ property.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24813,"byte_end":24826,"line_start":780,"line_end":780,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24827,"byte_end":24830,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ - The empty string is not an identifier. Use `Option<Ident>`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24831,"byte_end":24896,"line_start":782,"line_end":782,"column_start":1,"column_end":66}},{"value":"/ - A lifetime is not an identifier. Use `syn::Lifetime` instead.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24897,"byte_end":24964,"line_start":783,"line_end":783,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24965,"byte_end":24968,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ An identifier constructed with `Ident::new` is permitted to be a Rust","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24969,"byte_end":25042,"line_start":785,"line_end":785,"column_start":1,"column_end":74}},{"value":"/ keyword, though parsing one through its [`Parse`] implementation rejects","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25043,"byte_end":25119,"line_start":786,"line_end":786,"column_start":1,"column_end":77}},{"value":"/ Rust keywords. Use `input.call(Ident::parse_any)` when parsing to match the","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25120,"byte_end":25199,"line_start":787,"line_end":787,"column_start":1,"column_end":80}},{"value":"/ behaviour of `Ident::new`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25200,"byte_end":25230,"line_start":788,"line_end":788,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25231,"byte_end":25234,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ [`Parse`]: https://docs.rs/syn/1.0/syn/parse/trait.Parse.html","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25235,"byte_end":25300,"line_start":790,"line_end":790,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25301,"byte_end":25304,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25305,"byte_end":25319,"line_start":792,"line_end":792,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25320,"byte_end":25323,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ A new ident can be created from a string using the `Ident::new` function.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25324,"byte_end":25401,"line_start":794,"line_end":794,"column_start":1,"column_end":78}},{"value":"/ A span must be provided explicitly which governs the name resolution","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25402,"byte_end":25474,"line_start":795,"line_end":795,"column_start":1,"column_end":73}},{"value":"/ behavior of the resulting identifier.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25475,"byte_end":25516,"line_start":796,"line_end":796,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25517,"byte_end":25520,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25521,"byte_end":25528,"line_start":798,"line_end":798,"column_start":1,"column_end":8}},{"value":"/ use proc_macro2::{Ident, Span};","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25529,"byte_end":25564,"line_start":799,"line_end":799,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25565,"byte_end":25568,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25569,"byte_end":25584,"line_start":801,"line_end":801,"column_start":1,"column_end":16}},{"value":"/     let call_ident = Ident::new(\"calligraphy\", Span::call_site());","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25585,"byte_end":25655,"line_start":802,"line_end":802,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25656,"byte_end":25659,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", call_ident);","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25660,"byte_end":25695,"line_start":804,"line_end":804,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25696,"byte_end":25701,"line_start":805,"line_end":805,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25702,"byte_end":25709,"line_start":806,"line_end":806,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25710,"byte_end":25713,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ An ident can be interpolated into a token stream using the `quote!` macro.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25714,"byte_end":25792,"line_start":808,"line_end":808,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25793,"byte_end":25796,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25797,"byte_end":25804,"line_start":810,"line_end":810,"column_start":1,"column_end":8}},{"value":"/ use proc_macro2::{Ident, Span};","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25805,"byte_end":25840,"line_start":811,"line_end":811,"column_start":1,"column_end":36}},{"value":"/ use quote::quote;","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25841,"byte_end":25862,"line_start":812,"line_end":812,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25863,"byte_end":25866,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25867,"byte_end":25882,"line_start":814,"line_end":814,"column_start":1,"column_end":16}},{"value":"/     let ident = Ident::new(\"demo\", Span::call_site());","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25883,"byte_end":25941,"line_start":815,"line_end":815,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25942,"byte_end":25945,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/     // Create a variable binding whose name is this ident.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":25946,"byte_end":26008,"line_start":817,"line_end":817,"column_start":1,"column_end":63}},{"value":"/     let expanded = quote! { let #ident = 10; };","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26009,"byte_end":26060,"line_start":818,"line_end":818,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26061,"byte_end":26064,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/     // Create a variable binding with a slightly different name.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26065,"byte_end":26133,"line_start":820,"line_end":820,"column_start":1,"column_end":69}},{"value":"/     let temp_ident = Ident::new(&format!(\"new_{}\", ident), Span::call_site());","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26134,"byte_end":26216,"line_start":821,"line_end":821,"column_start":1,"column_end":83}},{"value":"/     let expanded = quote! { let #temp_ident = 10; };","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26217,"byte_end":26273,"line_start":822,"line_end":822,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26274,"byte_end":26279,"line_start":823,"line_end":823,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26280,"byte_end":26287,"line_start":824,"line_end":824,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26288,"byte_end":26291,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ A string representation of the ident is available through the `to_string()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26292,"byte_end":26371,"line_start":826,"line_end":826,"column_start":1,"column_end":80}},{"value":"/ method.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26372,"byte_end":26383,"line_start":827,"line_end":827,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26384,"byte_end":26387,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26388,"byte_end":26395,"line_start":829,"line_end":829,"column_start":1,"column_end":8}},{"value":"/ # use proc_macro2::{Ident, Span};","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26396,"byte_end":26433,"line_start":830,"line_end":830,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26434,"byte_end":26439,"line_start":831,"line_end":831,"column_start":1,"column_end":6}},{"value":"/ # let ident = Ident::new(\"another_identifier\", Span::call_site());","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26440,"byte_end":26510,"line_start":832,"line_end":832,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26511,"byte_end":26516,"line_start":833,"line_end":833,"column_start":1,"column_end":6}},{"value":"/ // Examine the ident as a string.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26517,"byte_end":26554,"line_start":834,"line_end":834,"column_start":1,"column_end":38}},{"value":"/ let ident_string = ident.to_string();","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26555,"byte_end":26596,"line_start":835,"line_end":835,"column_start":1,"column_end":42}},{"value":"/ if ident_string.len() > 60 {","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26597,"byte_end":26629,"line_start":836,"line_end":836,"column_start":1,"column_end":33}},{"value":"/     println!(\"Very long identifier: {}\", ident_string)","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26630,"byte_end":26688,"line_start":837,"line_end":837,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26689,"byte_end":26694,"line_start":838,"line_end":838,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26695,"byte_end":26702,"line_start":839,"line_end":839,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28561,"byte_end":28564,"line_start":885,"line_end":885,"column_start":12,"column_end":15},"name":"new","qualname":"<Ident>::new","value":"pub fn new(&str, Span) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Ident` with the given `string` as well as the specified\n `span`.","sig":null,"attributes":[{"value":"/ Creates a new `Ident` with the given `string` as well as the specified","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26960,"byte_end":27034,"line_start":854,"line_end":854,"column_start":5,"column_end":79}},{"value":"/ `span`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27039,"byte_end":27050,"line_start":855,"line_end":855,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27055,"byte_end":27058,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ The `string` argument must be a valid identifier permitted by the","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27063,"byte_end":27132,"line_start":857,"line_end":857,"column_start":5,"column_end":74}},{"value":"/ language, otherwise the function will panic.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27137,"byte_end":27185,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27190,"byte_end":27193,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Note that `span`, currently in rustc, configures the hygiene information","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27198,"byte_end":27274,"line_start":860,"line_end":860,"column_start":5,"column_end":81}},{"value":"/ for this identifier.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27279,"byte_end":27303,"line_start":861,"line_end":861,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27308,"byte_end":27311,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ As of this time `Span::call_site()` explicitly opts-in to \"call-site\"","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27316,"byte_end":27389,"line_start":863,"line_end":863,"column_start":5,"column_end":78}},{"value":"/ hygiene meaning that identifiers created with this span will be resolved","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27394,"byte_end":27470,"line_start":864,"line_end":864,"column_start":5,"column_end":81}},{"value":"/ as if they were written directly at the location of the macro call, and","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27475,"byte_end":27550,"line_start":865,"line_end":865,"column_start":5,"column_end":80}},{"value":"/ other code at the macro call site will be able to refer to them as well.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27555,"byte_end":27631,"line_start":866,"line_end":866,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27636,"byte_end":27639,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ Later spans like `Span::def_site()` will allow to opt-in to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27644,"byte_end":27707,"line_start":868,"line_end":868,"column_start":5,"column_end":68}},{"value":"/ \"definition-site\" hygiene meaning that identifiers created with this","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27712,"byte_end":27784,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/ span will be resolved at the location of the macro definition and other","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27789,"byte_end":27864,"line_start":870,"line_end":870,"column_start":5,"column_end":80}},{"value":"/ code at the macro call site will not be able to refer to them.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27869,"byte_end":27935,"line_start":871,"line_end":871,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27940,"byte_end":27943,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Due to the current importance of hygiene this constructor, unlike other","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":27948,"byte_end":28023,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/ tokens, requires a `Span` to be specified at construction.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28028,"byte_end":28090,"line_start":874,"line_end":874,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28095,"byte_end":28098,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28103,"byte_end":28115,"line_start":876,"line_end":876,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28120,"byte_end":28123,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Panics if the input string is neither a keyword nor a legal variable","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28128,"byte_end":28200,"line_start":878,"line_end":878,"column_start":5,"column_end":77}},{"value":"/ name. If you are not sure whether the string contains an identifier and","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28205,"byte_end":28280,"line_start":879,"line_end":879,"column_start":5,"column_end":80}},{"value":"/ need to handle an error case, use","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28285,"byte_end":28322,"line_start":880,"line_end":880,"column_start":5,"column_end":42}},{"value":"/ <a href=\"https://docs.rs/syn/1.0/syn/fn.parse_str.html\"><code","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28327,"byte_end":28392,"line_start":881,"line_end":881,"column_start":5,"column_end":70}},{"value":"/   style=\"padding-right:0;\">syn::parse_str</code></a><code","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28397,"byte_end":28458,"line_start":882,"line_end":882,"column_start":5,"column_end":66}},{"value":"/   style=\"padding-left:0;\">::&lt;Ident&gt;</code>","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28463,"byte_end":28515,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/ rather than `Ident::new`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":28520,"byte_end":28549,"line_start":884,"line_end":884,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29123,"byte_end":29127,"line_start":902,"line_end":902,"column_start":12,"column_end":16},"name":"span","qualname":"<Ident>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of this `Ident`.\n","sig":null,"attributes":[{"value":"/ Returns the span of this `Ident`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29074,"byte_end":29111,"line_start":901,"line_end":901,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29293,"byte_end":29301,"line_start":908,"line_end":908,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Ident>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configures the span of this `Ident`, possibly changing its hygiene\n context.\n","sig":null,"attributes":[{"value":"/ Configures the span of this `Ident`, possibly changing its hygiene","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29194,"byte_end":29264,"line_start":906,"line_end":906,"column_start":5,"column_end":75}},{"value":"/ context.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29269,"byte_end":29281,"line_start":907,"line_end":907,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30717,"byte_end":30724,"line_start":969,"line_end":969,"column_start":12,"column_end":19},"name":"Literal","qualname":"::Literal","value":"Literal {  }","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`),\n byte character (`b'a'`), an integer or floating point number with or without\n a suffix (`1`, `1u8`, `2.3`, `2.3f32`).","sig":null,"attributes":[{"value":"/ A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`),","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30393,"byte_end":30471,"line_start":962,"line_end":962,"column_start":1,"column_end":79}},{"value":"/ byte character (`b'a'`), an integer or floating point number with or without","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30472,"byte_end":30552,"line_start":963,"line_end":963,"column_start":1,"column_end":81}},{"value":"/ a suffix (`1`, `1u8`, `2.3`, `2.3f32`).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30553,"byte_end":30596,"line_start":964,"line_end":964,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30597,"byte_end":30600,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ Boolean literals like `true` and `false` do not belong here, they are","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30601,"byte_end":30674,"line_start":966,"line_end":966,"column_start":1,"column_end":74}},{"value":"/ `Ident`s.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30675,"byte_end":30688,"line_start":967,"line_end":967,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32993,"byte_end":33004,"line_start":1030,"line_end":1030,"column_start":9,"column_end":20},"name":"u8_suffixed","qualname":"<Literal>::u8_suffixed","value":"pub fn u8_suffixed(u8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33020,"byte_end":33032,"line_start":1031,"line_end":1031,"column_start":9,"column_end":21},"name":"u16_suffixed","qualname":"<Literal>::u16_suffixed","value":"pub fn u16_suffixed(u16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33049,"byte_end":33061,"line_start":1032,"line_end":1032,"column_start":9,"column_end":21},"name":"u32_suffixed","qualname":"<Literal>::u32_suffixed","value":"pub fn u32_suffixed(u32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33078,"byte_end":33090,"line_start":1033,"line_end":1033,"column_start":9,"column_end":21},"name":"u64_suffixed","qualname":"<Literal>::u64_suffixed","value":"pub fn u64_suffixed(u64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33107,"byte_end":33120,"line_start":1034,"line_end":1034,"column_start":9,"column_end":22},"name":"u128_suffixed","qualname":"<Literal>::u128_suffixed","value":"pub fn u128_suffixed(u128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33138,"byte_end":33152,"line_start":1035,"line_end":1035,"column_start":9,"column_end":23},"name":"usize_suffixed","qualname":"<Literal>::usize_suffixed","value":"pub fn usize_suffixed(usize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33171,"byte_end":33182,"line_start":1036,"line_end":1036,"column_start":9,"column_end":20},"name":"i8_suffixed","qualname":"<Literal>::i8_suffixed","value":"pub fn i8_suffixed(i8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33198,"byte_end":33210,"line_start":1037,"line_end":1037,"column_start":9,"column_end":21},"name":"i16_suffixed","qualname":"<Literal>::i16_suffixed","value":"pub fn i16_suffixed(i16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33227,"byte_end":33239,"line_start":1038,"line_end":1038,"column_start":9,"column_end":21},"name":"i32_suffixed","qualname":"<Literal>::i32_suffixed","value":"pub fn i32_suffixed(i32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33256,"byte_end":33268,"line_start":1039,"line_end":1039,"column_start":9,"column_end":21},"name":"i64_suffixed","qualname":"<Literal>::i64_suffixed","value":"pub fn i64_suffixed(i64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33285,"byte_end":33298,"line_start":1040,"line_end":1040,"column_start":9,"column_end":22},"name":"i128_suffixed","qualname":"<Literal>::i128_suffixed","value":"pub fn i128_suffixed(i128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33316,"byte_end":33330,"line_start":1041,"line_end":1041,"column_start":9,"column_end":23},"name":"isize_suffixed","qualname":"<Literal>::isize_suffixed","value":"pub fn isize_suffixed(isize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30887,"byte_end":30955,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30964,"byte_end":30967,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30976,"byte_end":31046,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31055,"byte_end":31125,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31134,"byte_end":31206,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31215,"byte_end":31284,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31293,"byte_end":31347,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31356,"byte_end":31359,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31368,"byte_end":31437,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31446,"byte_end":31517,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31526,"byte_end":31536,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33387,"byte_end":33400,"line_start":1045,"line_end":1045,"column_start":9,"column_end":22},"name":"u8_unsuffixed","qualname":"<Literal>::u8_unsuffixed","value":"pub fn u8_unsuffixed(u8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33416,"byte_end":33430,"line_start":1046,"line_end":1046,"column_start":9,"column_end":23},"name":"u16_unsuffixed","qualname":"<Literal>::u16_unsuffixed","value":"pub fn u16_unsuffixed(u16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33447,"byte_end":33461,"line_start":1047,"line_end":1047,"column_start":9,"column_end":23},"name":"u32_unsuffixed","qualname":"<Literal>::u32_unsuffixed","value":"pub fn u32_unsuffixed(u32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33478,"byte_end":33492,"line_start":1048,"line_end":1048,"column_start":9,"column_end":23},"name":"u64_unsuffixed","qualname":"<Literal>::u64_unsuffixed","value":"pub fn u64_unsuffixed(u64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33509,"byte_end":33524,"line_start":1049,"line_end":1049,"column_start":9,"column_end":24},"name":"u128_unsuffixed","qualname":"<Literal>::u128_unsuffixed","value":"pub fn u128_unsuffixed(u128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33542,"byte_end":33558,"line_start":1050,"line_end":1050,"column_start":9,"column_end":25},"name":"usize_unsuffixed","qualname":"<Literal>::usize_unsuffixed","value":"pub fn usize_unsuffixed(usize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33577,"byte_end":33590,"line_start":1051,"line_end":1051,"column_start":9,"column_end":22},"name":"i8_unsuffixed","qualname":"<Literal>::i8_unsuffixed","value":"pub fn i8_unsuffixed(i8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33606,"byte_end":33620,"line_start":1052,"line_end":1052,"column_start":9,"column_end":23},"name":"i16_unsuffixed","qualname":"<Literal>::i16_unsuffixed","value":"pub fn i16_unsuffixed(i16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33637,"byte_end":33651,"line_start":1053,"line_end":1053,"column_start":9,"column_end":23},"name":"i32_unsuffixed","qualname":"<Literal>::i32_unsuffixed","value":"pub fn i32_unsuffixed(i32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33668,"byte_end":33682,"line_start":1054,"line_end":1054,"column_start":9,"column_end":23},"name":"i64_unsuffixed","qualname":"<Literal>::i64_unsuffixed","value":"pub fn i64_unsuffixed(i64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33699,"byte_end":33714,"line_start":1055,"line_end":1055,"column_start":9,"column_end":24},"name":"i128_unsuffixed","qualname":"<Literal>::i128_unsuffixed","value":"pub fn i128_unsuffixed(i128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33732,"byte_end":33748,"line_start":1056,"line_end":1056,"column_start":9,"column_end":25},"name":"isize_unsuffixed","qualname":"<Literal>::isize_unsuffixed","value":"pub fn isize_unsuffixed(isize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31744,"byte_end":31814,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31823,"byte_end":31826,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31835,"byte_end":31902,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31911,"byte_end":31975,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":31984,"byte_end":32042,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32051,"byte_end":32100,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32109,"byte_end":32181,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32190,"byte_end":32260,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32269,"byte_end":32326,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32335,"byte_end":32338,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32347,"byte_end":32416,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32425,"byte_end":32496,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32505,"byte_end":32515,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34429,"byte_end":34443,"line_start":1072,"line_end":1072,"column_start":12,"column_end":26},"name":"f64_unsuffixed","qualname":"<Literal>::f64_unsuffixed","value":"pub fn f64_unsuffixed(f64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed floating-point literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33770,"byte_end":33822,"line_start":1059,"line_end":1059,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33827,"byte_end":33830,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ This constructor is similar to those like `Literal::i8_unsuffixed` where","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33835,"byte_end":33911,"line_start":1061,"line_end":1061,"column_start":5,"column_end":81}},{"value":"/ the float's value is emitted directly into the token but no suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33916,"byte_end":33989,"line_start":1062,"line_end":1062,"column_start":5,"column_end":78}},{"value":"/ used, so it may be inferred to be a `f64` later in the compiler.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":33994,"byte_end":34062,"line_start":1063,"line_end":1063,"column_start":5,"column_end":73}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34067,"byte_end":34143,"line_start":1064,"line_end":1064,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34148,"byte_end":34219,"line_start":1065,"line_end":1065,"column_start":5,"column_end":76}},{"value":"/ positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34224,"byte_end":34246,"line_start":1066,"line_end":1066,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34251,"byte_end":34254,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34259,"byte_end":34271,"line_start":1068,"line_end":1068,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34276,"byte_end":34279,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34284,"byte_end":34358,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34363,"byte_end":34417,"line_start":1071,"line_end":1071,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35231,"byte_end":35243,"line_start":1090,"line_end":1090,"column_start":12,"column_end":24},"name":"f64_suffixed","qualname":"<Literal>::f64_suffixed","value":"pub fn f64_suffixed(f64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new suffixed floating-point literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34563,"byte_end":34613,"line_start":1077,"line_end":1077,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34618,"byte_end":34621,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ This constructor will create a literal like `1.0f64` where the value","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34626,"byte_end":34698,"line_start":1079,"line_end":1079,"column_start":5,"column_end":77}},{"value":"/ specified is the preceding part of the token and `f64` is the suffix of","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34703,"byte_end":34778,"line_start":1080,"line_end":1080,"column_start":5,"column_end":80}},{"value":"/ the token. This token will always be inferred to be an `f64` in the","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34783,"byte_end":34854,"line_start":1081,"line_end":1081,"column_start":5,"column_end":76}},{"value":"/ compiler. Literals created from negative numbers may not survive","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34859,"byte_end":34927,"line_start":1082,"line_end":1082,"column_start":5,"column_end":73}},{"value":"/ rountrips through `TokenStream` or strings and may be broken into two","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":34932,"byte_end":35005,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}},{"value":"/ tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35010,"byte_end":35048,"line_start":1084,"line_end":1084,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35053,"byte_end":35056,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35061,"byte_end":35073,"line_start":1086,"line_end":1086,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35078,"byte_end":35081,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35086,"byte_end":35160,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35165,"byte_end":35219,"line_start":1089,"line_end":1089,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36020,"byte_end":36034,"line_start":1108,"line_end":1108,"column_start":12,"column_end":26},"name":"f32_unsuffixed","qualname":"<Literal>::f32_unsuffixed","value":"pub fn f32_unsuffixed(f32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed floating-point literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35361,"byte_end":35413,"line_start":1095,"line_end":1095,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35418,"byte_end":35421,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ This constructor is similar to those like `Literal::i8_unsuffixed` where","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35426,"byte_end":35502,"line_start":1097,"line_end":1097,"column_start":5,"column_end":81}},{"value":"/ the float's value is emitted directly into the token but no suffix is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35507,"byte_end":35580,"line_start":1098,"line_end":1098,"column_start":5,"column_end":78}},{"value":"/ used, so it may be inferred to be a `f64` later in the compiler.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35585,"byte_end":35653,"line_start":1099,"line_end":1099,"column_start":5,"column_end":73}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35658,"byte_end":35734,"line_start":1100,"line_end":1100,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35739,"byte_end":35810,"line_start":1101,"line_end":1101,"column_start":5,"column_end":76}},{"value":"/ positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35815,"byte_end":35837,"line_start":1102,"line_end":1102,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35842,"byte_end":35845,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35850,"byte_end":35862,"line_start":1104,"line_end":1104,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35867,"byte_end":35870,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35875,"byte_end":35949,"line_start":1106,"line_end":1106,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":35954,"byte_end":36008,"line_start":1107,"line_end":1107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36822,"byte_end":36834,"line_start":1126,"line_end":1126,"column_start":12,"column_end":24},"name":"f32_suffixed","qualname":"<Literal>::f32_suffixed","value":"pub fn f32_suffixed(f32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new suffixed floating-point literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36154,"byte_end":36204,"line_start":1113,"line_end":1113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36209,"byte_end":36212,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ This constructor will create a literal like `1.0f32` where the value","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36217,"byte_end":36289,"line_start":1115,"line_end":1115,"column_start":5,"column_end":77}},{"value":"/ specified is the preceding part of the token and `f32` is the suffix of","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36294,"byte_end":36369,"line_start":1116,"line_end":1116,"column_start":5,"column_end":80}},{"value":"/ the token. This token will always be inferred to be an `f32` in the","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36374,"byte_end":36445,"line_start":1117,"line_end":1117,"column_start":5,"column_end":76}},{"value":"/ compiler. Literals created from negative numbers may not survive","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36450,"byte_end":36518,"line_start":1118,"line_end":1118,"column_start":5,"column_end":73}},{"value":"/ rountrips through `TokenStream` or strings and may be broken into two","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36523,"byte_end":36596,"line_start":1119,"line_end":1119,"column_start":5,"column_end":78}},{"value":"/ tokens (`-` and positive literal).","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36601,"byte_end":36639,"line_start":1120,"line_end":1120,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36644,"byte_end":36647,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36652,"byte_end":36664,"line_start":1122,"line_end":1122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36669,"byte_end":36672,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36677,"byte_end":36751,"line_start":1124,"line_end":1124,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36756,"byte_end":36810,"line_start":1125,"line_end":1125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36983,"byte_end":36989,"line_start":1132,"line_end":1132,"column_start":12,"column_end":18},"name":"string","qualname":"<Literal>::string","value":"pub fn string(&str) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" String literal.\n","sig":null,"attributes":[{"value":"/ String literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":36952,"byte_end":36971,"line_start":1131,"line_end":1131,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37114,"byte_end":37123,"line_start":1137,"line_end":1137,"column_start":12,"column_end":21},"name":"character","qualname":"<Literal>::character","value":"pub fn character(char) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Character literal.\n","sig":null,"attributes":[{"value":"/ Character literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37080,"byte_end":37102,"line_start":1136,"line_end":1136,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37245,"byte_end":37256,"line_start":1142,"line_end":1142,"column_start":12,"column_end":23},"name":"byte_string","qualname":"<Literal>::byte_string","value":"pub fn byte_string(&[u8]) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Byte string literal.\n","sig":null,"attributes":[{"value":"/ Byte string literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37209,"byte_end":37233,"line_start":1141,"line_end":1141,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37402,"byte_end":37406,"line_start":1147,"line_end":1147,"column_start":12,"column_end":16},"name":"span","qualname":"<Literal>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span encompassing this literal.\n","sig":null,"attributes":[{"value":"/ Returns the span encompassing this literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37343,"byte_end":37390,"line_start":1146,"line_end":1146,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37537,"byte_end":37545,"line_start":1152,"line_end":1152,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Literal>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configures the span associated for this literal.\n","sig":null,"attributes":[{"value":"/ Configures the span associated for this literal.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37473,"byte_end":37525,"line_start":1151,"line_end":1151,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38180,"byte_end":38187,"line_start":1165,"line_end":1165,"column_start":12,"column_end":19},"name":"subspan","qualname":"<Literal>::subspan","value":"pub fn subspan<R: RangeBounds<usize>>(&Self, R) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Span` that is a subset of `self.span()` containing only\n the source bytes in range `range`. Returns `None` if the would-be\n trimmed span is outside the bounds of `self`.","sig":null,"attributes":[{"value":"/ Returns a `Span` that is a subset of `self.span()` containing only","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37623,"byte_end":37693,"line_start":1156,"line_end":1156,"column_start":5,"column_end":75}},{"value":"/ the source bytes in range `range`. Returns `None` if the would-be","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37698,"byte_end":37767,"line_start":1157,"line_end":1157,"column_start":5,"column_end":74}},{"value":"/ trimmed span is outside the bounds of `self`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37772,"byte_end":37821,"line_start":1158,"line_end":1158,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37826,"byte_end":37829,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ Warning: the underlying [`proc_macro::Literal::subspan`] method is","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37834,"byte_end":37904,"line_start":1160,"line_end":1160,"column_start":5,"column_end":75}},{"value":"/ nightly-only. When called from within a procedural macro not using a","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37909,"byte_end":37981,"line_start":1161,"line_end":1161,"column_start":5,"column_end":77}},{"value":"/ nightly compiler, this method will always return `None`.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":37986,"byte_end":38046,"line_start":1162,"line_end":1162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38051,"byte_end":38054,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ [`proc_macro::Literal::subspan`]: https://doc.rust-lang.org/proc_macro/struct.Literal.html#method.subspan","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38059,"byte_end":38168,"line_start":1164,"line_end":1164,"column_start":5,"column_end":114}}]},{"kind":"Mod","id":{"krate":0,"index":509},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38654,"byte_end":38666,"line_start":1183,"line_end":1183,"column_start":9,"column_end":21},"name":"token_stream","qualname":"::token_stream","value":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":951},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":524}],"decl_id":null,"docs":" Public implementation details for the `TokenStream` type, such as iterators.\n","sig":null,"attributes":[{"value":"/ Public implementation details for the `TokenStream` type, such as iterators.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38565,"byte_end":38645,"line_start":1182,"line_end":1182,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":39052,"byte_end":39060,"line_start":1196,"line_end":1196,"column_start":16,"column_end":24},"name":"IntoIter","qualname":"::token_stream::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":" An iterator over `TokenStream`'s `TokenTree`s.","sig":null,"attributes":[{"value":"/ An iterator over `TokenStream`'s `TokenTree`s.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38815,"byte_end":38865,"line_start":1191,"line_end":1191,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38870,"byte_end":38873,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ The iteration is \"shallow\", e.g. the iterator doesn't recurse into","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38878,"byte_end":38948,"line_start":1193,"line_end":1193,"column_start":5,"column_end":75}},{"value":"/ delimited groups, and returns whole groups as token trees.","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38953,"byte_end":39015,"line_start":1194,"line_end":1194,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/parse.rs","byte_start":40141,"byte_end":40147,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":65368,"byte_end":65379,"line_start":40,"line_end":40,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":67402,"byte_end":67413,"line_start":98,"line_end":98,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":68410,"byte_end":68421,"line_start":135,"line_end":135,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":68792,"byte_end":68803,"line_start":151,"line_end":151,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":70167,"byte_end":70178,"line_start":189,"line_end":189,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":70403,"byte_end":70414,"line_start":197,"line_end":197,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":70667,"byte_end":70678,"line_start":207,"line_end":207,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":70894,"byte_end":70905,"line_start":216,"line_end":216,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":71089,"byte_end":71100,"line_start":224,"line_end":224,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":71311,"byte_end":71322,"line_start":232,"line_end":232,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":71593,"byte_end":71604,"line_start":244,"line_end":244,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":71787,"byte_end":71798,"line_start":250,"line_end":250,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":72025,"byte_end":72036,"line_start":258,"line_end":258,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":72285,"byte_end":72295,"line_start":272,"line_end":272,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":72551,"byte_end":72561,"line_start":284,"line_end":284,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":75915,"byte_end":75919,"line_start":418,"line_end":418,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":78560,"byte_end":78564,"line_start":526,"line_end":526,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":79184,"byte_end":79189,"line_start":556,"line_end":556,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":79831,"byte_end":79836,"line_start":590,"line_end":590,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":80279,"byte_end":80284,"line_start":607,"line_end":607,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":80689,"byte_end":80694,"line_start":624,"line_end":624,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":82404,"byte_end":82409,"line_start":696,"line_end":696,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":82543,"byte_end":82548,"line_start":702,"line_end":702,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":82826,"byte_end":82831,"line_start":716,"line_end":716,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":83016,"byte_end":83021,"line_start":725,"line_end":725,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":84138,"byte_end":84145,"line_start":769,"line_end":769,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":87271,"byte_end":87278,"line_start":886,"line_end":886,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":87400,"byte_end":87407,"line_start":892,"line_end":892,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":88683,"byte_end":88702,"line_start":36,"line_end":36,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":89449,"byte_end":89460,"line_start":63,"line_end":63,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":90327,"byte_end":90338,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":90962,"byte_end":90973,"line_start":114,"line_end":114,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":91271,"byte_end":91282,"line_start":123,"line_end":123,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":91457,"byte_end":91468,"line_start":129,"line_end":129,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":91761,"byte_end":91772,"line_start":138,"line_end":138,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":92615,"byte_end":92626,"line_start":162,"line_end":162,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":92921,"byte_end":92932,"line_start":172,"line_end":172,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":93319,"byte_end":93330,"line_start":184,"line_end":184,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":94242,"byte_end":94253,"line_start":208,"line_end":208,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":94701,"byte_end":94712,"line_start":222,"line_end":222,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":95189,"byte_end":95200,"line_start":237,"line_end":237,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":95491,"byte_end":95499,"line_start":246,"line_end":246,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":95626,"byte_end":95634,"line_start":252,"line_end":252,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":95740,"byte_end":95748,"line_start":258,"line_end":258,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":96123,"byte_end":96134,"line_start":273,"line_end":273,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":96519,"byte_end":96532,"line_start":287,"line_end":287,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":97769,"byte_end":97782,"line_start":319,"line_end":319,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":99117,"byte_end":99121,"line_start":376,"line_end":376,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":103361,"byte_end":103365,"line_start":507,"line_end":507,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":103518,"byte_end":103522,"line_start":513,"line_end":513,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":103624,"byte_end":103628,"line_start":519,"line_end":519,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":104219,"byte_end":104224,"line_start":543,"line_end":543,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":107051,"byte_end":107056,"line_start":623,"line_end":623,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":107154,"byte_end":107159,"line_start":629,"line_end":629,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":107424,"byte_end":107429,"line_start":638,"line_end":638,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":107788,"byte_end":107793,"line_start":653,"line_end":653,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":109306,"byte_end":109311,"line_start":701,"line_end":701,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":109611,"byte_end":109616,"line_start":711,"line_end":711,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":109888,"byte_end":109893,"line_start":724,"line_end":724,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":110118,"byte_end":110123,"line_start":733,"line_end":733,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":111135,"byte_end":111142,"line_start":772,"line_end":772,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":114314,"byte_end":114321,"line_start":879,"line_end":879,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":114426,"byte_end":114433,"line_start":885,"line_end":885,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":114662,"byte_end":114669,"line_start":894,"line_end":894,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4796,"byte_end":4807,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":5551,"byte_end":5562,"line_start":163,"line_end":163,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6034,"byte_end":6045,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6368,"byte_end":6379,"line_start":190,"line_end":190,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6554,"byte_end":6565,"line_start":197,"line_end":197,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6690,"byte_end":6701,"line_start":203,"line_end":203,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6837,"byte_end":6848,"line_start":209,"line_end":209,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6998,"byte_end":7009,"line_start":215,"line_end":215,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":7276,"byte_end":7287,"line_start":223,"line_end":223,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":7464,"byte_end":7475,"line_start":228,"line_end":228,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":7905,"byte_end":7916,"line_start":238,"line_end":238,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":8092,"byte_end":8103,"line_start":245,"line_end":245,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":8224,"byte_end":8232,"line_start":251,"line_end":251,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":10754,"byte_end":10758,"line_start":344,"line_end":344,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15155,"byte_end":15159,"line_start":469,"line_end":469,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15687,"byte_end":15696,"line_start":488,"line_end":488,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16662,"byte_end":16671,"line_start":515,"line_end":515,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16769,"byte_end":16778,"line_start":521,"line_end":521,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16876,"byte_end":16885,"line_start":527,"line_end":527,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16985,"byte_end":16994,"line_start":533,"line_end":533,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":17339,"byte_end":17348,"line_start":543,"line_end":543,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":17745,"byte_end":17754,"line_start":555,"line_end":555,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19216,"byte_end":19221,"line_start":601,"line_end":601,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21662,"byte_end":21667,"line_start":681,"line_end":681,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21806,"byte_end":21811,"line_start":687,"line_end":687,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22668,"byte_end":22673,"line_start":717,"line_end":717,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24145,"byte_end":24150,"line_start":760,"line_end":760,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24270,"byte_end":24275,"line_start":766,"line_end":766,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26812,"byte_end":26817,"line_start":846,"line_end":846,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29396,"byte_end":29401,"line_start":913,"line_end":913,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29514,"byte_end":29519,"line_start":919,"line_end":919,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29643,"byte_end":29648,"line_start":928,"line_end":928,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29673,"byte_end":29678,"line_start":930,"line_end":930,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29796,"byte_end":29801,"line_start":936,"line_end":936,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29923,"byte_end":29928,"line_start":942,"line_end":942,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30154,"byte_end":30159,"line_start":950,"line_end":950,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30282,"byte_end":30287,"line_start":956,"line_end":956,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32636,"byte_end":32643,"line_start":1014,"line_end":1014,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38320,"byte_end":38327,"line_start":1170,"line_end":1170,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38450,"byte_end":38457,"line_start":1176,"line_end":1176,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":39173,"byte_end":39181,"line_start":1201,"line_end":1201,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":39332,"byte_end":39340,"line_start":1209,"line_end":1209,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":39488,"byte_end":39499,"line_start":1215,"line_end":1215,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4067,"byte_end":4075,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":103}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/parse.rs","byte_start":40141,"byte_end":40147,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":65368,"byte_end":65379,"line_start":40,"line_end":40,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":67402,"byte_end":67413,"line_start":98,"line_end":98,"column_start":15,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":68410,"byte_end":68421,"line_start":135,"line_end":135,"column_start":18,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":7723}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":68792,"byte_end":68803,"line_start":151,"line_end":151,"column_start":18,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":70167,"byte_end":70178,"line_start":189,"line_end":189,"column_start":16,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":70403,"byte_end":70414,"line_start":197,"line_end":197,"column_start":40,"column_end":51},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":70667,"byte_end":70678,"line_start":207,"line_end":207,"column_start":40,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":15,"index":2944},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":70894,"byte_end":70905,"line_start":216,"line_end":216,"column_start":26,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":71089,"byte_end":71100,"line_start":224,"line_end":224,"column_start":34,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":71311,"byte_end":71322,"line_start":232,"line_end":232,"column_start":36,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":71593,"byte_end":71604,"line_start":244,"line_end":244,"column_start":28,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":4903}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":71787,"byte_end":71798,"line_start":250,"line_end":250,"column_start":30,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":4903}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":72025,"byte_end":72036,"line_start":258,"line_end":258,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":72285,"byte_end":72295,"line_start":272,"line_end":272,"column_start":6,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":72551,"byte_end":72561,"line_start":284,"line_end":284,"column_start":16,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":75915,"byte_end":75919,"line_start":418,"line_end":418,"column_start":6,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":78560,"byte_end":78564,"line_start":526,"line_end":526,"column_start":16,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":79184,"byte_end":79189,"line_start":556,"line_end":556,"column_start":6,"column_end":11},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":79831,"byte_end":79836,"line_start":590,"line_end":590,"column_start":18,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":80279,"byte_end":80284,"line_start":607,"line_end":607,"column_start":16,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":80689,"byte_end":80694,"line_start":624,"line_end":624,"column_start":6,"column_end":11},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":82404,"byte_end":82409,"line_start":696,"line_end":696,"column_start":20,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":82543,"byte_end":82548,"line_start":702,"line_end":702,"column_start":26,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":82826,"byte_end":82831,"line_start":716,"line_end":716,"column_start":18,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":83016,"byte_end":83021,"line_start":725,"line_end":725,"column_start":16,"column_end":21},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":84138,"byte_end":84145,"line_start":769,"line_end":769,"column_start":6,"column_end":13},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":87271,"byte_end":87278,"line_start":886,"line_end":886,"column_start":18,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/fallback.rs","byte_start":87400,"byte_end":87407,"line_start":892,"line_end":892,"column_start":16,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":88683,"byte_end":88702,"line_start":36,"line_end":36,"column_start":6,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":89449,"byte_end":89460,"line_start":63,"line_end":63,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":90327,"byte_end":90338,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":7723}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":90962,"byte_end":90973,"line_start":114,"line_end":114,"column_start":18,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":91271,"byte_end":91282,"line_start":123,"line_end":123,"column_start":40,"column_end":51},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":91457,"byte_end":91468,"line_start":129,"line_end":129,"column_start":40,"column_end":51},"kind":{"Impl":{"id":34}},"from":{"krate":15,"index":2944},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":91761,"byte_end":91772,"line_start":138,"line_end":138,"column_start":38,"column_end":49},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":92615,"byte_end":92626,"line_start":162,"line_end":162,"column_start":26,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":92921,"byte_end":92932,"line_start":172,"line_end":172,"column_start":34,"column_end":45},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":93319,"byte_end":93330,"line_start":184,"line_end":184,"column_start":36,"column_end":47},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":94242,"byte_end":94253,"line_start":208,"line_end":208,"column_start":28,"column_end":39},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":4903}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":94701,"byte_end":94712,"line_start":222,"line_end":222,"column_start":30,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":4903}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":95189,"byte_end":95200,"line_start":237,"line_end":237,"column_start":16,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":95491,"byte_end":95499,"line_start":246,"line_end":246,"column_start":37,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":95626,"byte_end":95634,"line_start":252,"line_end":252,"column_start":35,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":95740,"byte_end":95748,"line_start":258,"line_end":258,"column_start":16,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":96123,"byte_end":96134,"line_start":273,"line_end":273,"column_start":23,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":96519,"byte_end":96532,"line_start":287,"line_end":287,"column_start":19,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":97769,"byte_end":97782,"line_start":319,"line_end":319,"column_start":16,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":99117,"byte_end":99121,"line_start":376,"line_end":376,"column_start":6,"column_end":10},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":103361,"byte_end":103365,"line_start":507,"line_end":507,"column_start":40,"column_end":44},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":103518,"byte_end":103522,"line_start":513,"line_end":513,"column_start":31,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":103624,"byte_end":103628,"line_start":519,"line_end":519,"column_start":16,"column_end":20},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":104219,"byte_end":104224,"line_start":543,"line_end":543,"column_start":6,"column_end":11},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":107051,"byte_end":107056,"line_start":623,"line_end":623,"column_start":32,"column_end":37},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":667},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":107154,"byte_end":107159,"line_start":629,"line_end":629,"column_start":18,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":667},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":107424,"byte_end":107429,"line_start":638,"line_end":638,"column_start":16,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":667},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":107788,"byte_end":107793,"line_start":653,"line_end":653,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":109306,"byte_end":109311,"line_start":701,"line_end":701,"column_start":20,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":109611,"byte_end":109616,"line_start":711,"line_end":711,"column_start":26,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":109888,"byte_end":109893,"line_start":724,"line_end":724,"column_start":18,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":110118,"byte_end":110123,"line_start":733,"line_end":733,"column_start":16,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":111135,"byte_end":111142,"line_start":772,"line_end":772,"column_start":6,"column_end":13},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":114314,"byte_end":114321,"line_start":879,"line_end":879,"column_start":34,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":685},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":114426,"byte_end":114433,"line_start":885,"line_end":885,"column_start":18,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":685},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/wrapper.rs","byte_start":114662,"byte_end":114669,"line_start":894,"line_end":894,"column_start":16,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":685},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":4796,"byte_end":4807,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":5551,"byte_end":5562,"line_start":163,"line_end":163,"column_start":18,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6034,"byte_end":6045,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":7723}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6368,"byte_end":6379,"line_start":190,"line_end":190,"column_start":40,"column_end":51},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6554,"byte_end":6565,"line_start":197,"line_end":197,"column_start":40,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":15,"index":2944},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6690,"byte_end":6701,"line_start":203,"line_end":203,"column_start":26,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6837,"byte_end":6848,"line_start":209,"line_end":209,"column_start":28,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":4903}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":6998,"byte_end":7009,"line_start":215,"line_end":215,"column_start":30,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":4903}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":7276,"byte_end":7287,"line_start":223,"line_end":223,"column_start":34,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":7464,"byte_end":7475,"line_start":228,"line_end":228,"column_start":36,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":7905,"byte_end":7916,"line_start":238,"line_end":238,"column_start":18,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":8092,"byte_end":8103,"line_start":245,"line_end":245,"column_start":16,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":8224,"byte_end":8232,"line_start":251,"line_end":251,"column_start":16,"column_end":24},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":10754,"byte_end":10758,"line_start":344,"line_end":344,"column_start":6,"column_end":10},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15155,"byte_end":15159,"line_start":469,"line_end":469,"column_start":16,"column_end":20},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":15687,"byte_end":15696,"line_start":488,"line_end":488,"column_start":6,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16662,"byte_end":16671,"line_start":515,"line_end":515,"column_start":22,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16769,"byte_end":16778,"line_start":521,"line_end":521,"column_start":22,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16876,"byte_end":16885,"line_start":527,"line_end":527,"column_start":22,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":16985,"byte_end":16994,"line_start":533,"line_end":533,"column_start":24,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":17339,"byte_end":17348,"line_start":543,"line_end":543,"column_start":18,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":17745,"byte_end":17754,"line_start":555,"line_end":555,"column_start":16,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":19216,"byte_end":19221,"line_start":601,"line_end":601,"column_start":6,"column_end":11},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21662,"byte_end":21667,"line_start":681,"line_end":681,"column_start":18,"column_end":23},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":746},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":21806,"byte_end":21811,"line_start":687,"line_end":687,"column_start":16,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":746},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":22668,"byte_end":22673,"line_start":717,"line_end":717,"column_start":6,"column_end":11},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24145,"byte_end":24150,"line_start":760,"line_end":760,"column_start":18,"column_end":23},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":24270,"byte_end":24275,"line_start":766,"line_end":766,"column_start":16,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":26812,"byte_end":26817,"line_start":846,"line_end":846,"column_start":6,"column_end":11},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29396,"byte_end":29401,"line_start":913,"line_end":913,"column_start":20,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29514,"byte_end":29519,"line_start":919,"line_end":919,"column_start":26,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29643,"byte_end":29648,"line_start":928,"line_end":928,"column_start":13,"column_end":18},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29673,"byte_end":29678,"line_start":930,"line_end":930,"column_start":21,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29796,"byte_end":29801,"line_start":936,"line_end":936,"column_start":14,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1674}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":29923,"byte_end":29928,"line_start":942,"line_end":942,"column_start":15,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":6386}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30154,"byte_end":30159,"line_start":950,"line_end":950,"column_start":18,"column_end":23},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":30282,"byte_end":30287,"line_start":956,"line_end":956,"column_start":16,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":32636,"byte_end":32643,"line_start":1014,"line_end":1014,"column_start":6,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38320,"byte_end":38327,"line_start":1170,"line_end":1170,"column_start":16,"column_end":23},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":38450,"byte_end":38457,"line_start":1176,"line_end":1176,"column_start":18,"column_end":25},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":39173,"byte_end":39181,"line_start":1201,"line_end":1201,"column_start":23,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":39332,"byte_end":39340,"line_start":1209,"line_end":1209,"column_start":20,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/andreim/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.19/src/lib.rs","byte_start":39488,"byte_end":39499,"line_start":1215,"line_end":1215,"column_start":27,"column_end":38},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":720},"to":{"krate":2,"index":4894}}]}